rm(list = ls())

###########NOTE this has been changed from original on 04/01/15 to only contain correlation analysis for JL markers
### Follow this analysis up by selecting which markers appear to be MC and excluding them from marker vector which will be used in TASSEL rescan function
###Required files:
### (1) imputedMarkers.allchr.0.1cm.final.Panzea.consolidated.B.txt (GBS SNPs)
### (2) transformed BLUEs
### (3) JL model output, with NA in pop term row (modified version)


setwd("C:\\Users\\ceb19\\Documents\\Gore Lab\\Carotenoid NAM Merged Env\\(9)JL Analysis\\Permutations")
home.dir <- getwd()


library(multtest)

#Read in the gneotypic data
setwd(paste(home.dir, "\\GBS_SNPs", sep = ""))
genotypes <- read.table("imputedMarkers.allchr.0.1cm.final.Panzea.consolidated.B.txt", head = TRUE)

#Eventually, loop around the traits. This loop will begin here

trait <- "TRAIT5_ACAR_RUV"
BLUE.or.BLUP <- "BLUE"  #Options are "BLUE" and "BLUP"
testing.correlation <- TRUE


for(i in trait){

#Read in the trait under study
setwd(paste(home.dir, "\\Phenotypes",sep = ""))
pheno.data <- read.table(paste(trait,"_BLUE_outtrans.txt", sep = ""), head = TRUE)
head(pheno.data)

#Read in the results from JL analysis
setwd(paste(home.dir, "\\Data_for_1pct_Support_Intervals\\JL_output\\JL_model_modified_SI01\\", sep = ""))
#new path for SI01 required here
TASSEL.model.results <- read.table(paste(trait, "_JL_model_modified_SI01.txt"   , sep = "") , head = TRUE)

if(is.numeric(TASSEL.model.results[,2]) == FALSE){
 print(paste("The chromosome column in ", i," model results needs to be numeric. Please change this before proceeding.", sep = ""))
 break;
}

#### #########################################################################################################################################
#Get the appropriate SNPs and merge the phenotypic and genotypic data together.
  

#Parse out all of the SNPs that were selected in the model
geno.reduced <- genotypes[which(genotypes[,1] %in% TASSEL.model.results[,4]),-c(2:5)]
geno.reduced.formatted <-as.data.frame(t(geno.reduced[,-1]))
colnames(geno.reduced.formatted) <- as.character(t(geno.reduced[,1]))



#pheno.data will always have more data becuase IBM is included in the phenotypic data.

geno.and.pheno <- merge(pheno.data, geno.reduced.formatted, by.x = "Geno_Code", by.y = "row.names")

#Add a population column
geno.and.pheno <- cbind(geno.and.pheno[,1], as.factor(substr(as.character(geno.and.pheno[,1]), start = 3, stop = 4)), geno.and.pheno[,c(2:ncol(geno.and.pheno))])
colnames(geno.and.pheno)[2] <- "pop"

##############################################################################################################################################
#Fit the JL model and obtain pop*marker terms
attach(geno.and.pheno)
#setwd(paste(home.dir, "\\JL_Results_", BLUE.or.BLUP,"\\Pop_by_Marker_Terms_from_R\\",  sep = ""))
 

#Calculate a correlation matrix between correlated SNPs, and print them out to a data set.
if(testing.correlation == TRUE){
  setwd("C:\\Users\\ceb19\\Documents\\Gore Lab\\Carotenoid NAM Merged Env\\(19) Evaluating Multicollinearity\\")
  Description.of.SNPs <- "Chr_ALL_SNPs_ACAR"
  SNP.IDs <- c("S_44638563", "S_48526286", "S_118969928", "S_136572666")
            #uncomment two lines below if testing correlation across all significant markers
           #TASSEL.model.results.2 <- TASSEL.model.results[2:nrow(TASSEL.model.results),]
           #SNP.IDs <- as.vector(unique(TASSEL.model.results.2[,4]))
  #Description.of.SNPs <- "Chr_5_SNPs_bcar"
  #SNP.IDs <- c("S_57225641", "S_56737096", "S_59271817")
  #Description.of.SNPs <- "Chr_1_SNPs_totcar"
  #SNP.IDs <- c("S_289019777", "S_287963456")
  
  SNP.set <- geno.and.pheno[,which(colnames(geno.and.pheno) %in% SNP.IDs)]
  correlation.matrix <- cor(SNP.set, use = "pairwise.complete.obs")
  write.table(correlation.matrix, paste("Correlation.matrix.",Description.of.SNPs,".txt", sep = ""), sep = "\t", row.names = TRUE, quote = FALSE)
}



}# End for(i in trait)
